from connection import DB_PARAMS
import psycopg2
import os


def create_table():
    try:
        conn = psycopg2.connect(**DB_PARAMS)
        cursor = conn.cursor()
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS files (
                id SERIAL PRIMARY KEY,
                filename TEXT,
                filedata BYTEA
            )
        """)
        conn.commit()
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞!")
    except psycopg2.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        cursor.close()
        conn.close()

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ –±–∞–∑—É
def excel_pull(file_path):
    if not os.path.exists(file_path):
        print("‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    try:
        conn = psycopg2.connect(**DB_PARAMS)
        cursor = conn.cursor()
        with open(file_path, "rb") as file:
            file_data = file.read()
            cursor.execute("INSERT INTO files (filename, filedata) VALUES (%s, %s)", (file_path, file_data))
        conn.commit()
        print(f"‚úÖ –§–∞–π–ª {file_path} –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –±–∞–∑—É!")
    except psycopg2.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        cursor.close()
        conn.close()

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
def download_file(file_id):
    try:
        conn = psycopg2.connect(**DB_PARAMS)
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Å —Ç–∞–∫–∏–º ID
        cursor.execute("SELECT filename FROM files WHERE id = %s", (file_id,))
        row = cursor.fetchone()
        
        if row:
            cursor.execute("DELETE FROM files WHERE id = %s", (file_id,))
            conn.commit()
            print(f"üóëÔ∏è –§–∞–π–ª —Å ID {file_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")
        else:
            print("‚ùå –§–∞–π–ª —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except psycopg2.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        cursor.close()
        conn.close()

def update_file(file_id, new_data):
    try:
        conn = psycopg2.connect(**DB_PARAMS)
        cursor = conn.cursor()
        cursor.execute("SELECT filedata FROM files WHERE id = %s", (file_id,))
        row = cursor.fetchone()
        if row:
            existing_data = bytes(row[0])  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º memoryview –≤ bytes
            updated_data = existing_data + new_data.encode()  
            
            cursor.execute("UPDATE files SET filedata = %s WHERE id = %s", (updated_data, file_id))
            conn.commit()
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–∞–π–ª —Å ID {file_id}!")
        else:
            print("‚ùå –§–∞–π–ª —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except psycopg2.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        cursor.close()
        conn.close()

def delete_data_from_file(file_id, data_to_remove):
    try:
        conn = psycopg2.connect(**DB_PARAMS)
        cursor = conn.cursor()
        cursor.execute("SELECT filedata FROM files WHERE id = %s", (file_id,))
        row = cursor.fetchone()
        
        if row:
            existing_data = bytes(row[0])  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º memoryview –≤ bytes
            updated_data = existing_data.replace(data_to_remove.encode(), b"")  # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
            
            cursor.execute("UPDATE files SET filedata = %s WHERE id = %s", (updated_data, file_id))
            conn.commit()
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ —Å ID {file_id}!")
        else:
            print("‚ùå –§–∞–π–ª —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except psycopg2.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        cursor.close()
        conn.close()
